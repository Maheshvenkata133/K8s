apiVersion: v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
    template:
      metadata:
        labels:
          app:nginx
      spec:
        containers:
          - name: nginx
            image: nginx:latest
            ports:
              - containerPort: 80 
            resources:
              requests:
                cpu: "100m"
                memory: "128Mi"
              limits:
                cpu: "500m
                memory: "256Mi"
            volumeMounts:
              - name: nginx-storage
                mountPath: /usr/share/nginx/html
              - name: config-volume
                mountPath: /etc/nginx/conf.d/custom.conf
                subPath: custom.conf
              - name: secret-volume
                mountPath: /etc/secret
            env:
              - name: SECRET_USERNAME
                valueFrom: 
                  secretKeyRef:
                    name: nginx-secret
                    key: username
               - name: SECRET_PASSWORD
                 valueFrom:
                   secretKeyRef:
                     name: nginx-secret
                     key: password
            livenessProbe:
              httpGet:
                path: /
                port: 80
              initialDelaySeconds: 10
              periodSeconds: 5
              failureThreshold: 3
            readinessProbe: 
              httpGet:
                path: /
                port: 80
              initialDelaySeconds: 5
              periodSeconds: 3
              failureThreshold: 3
      volumes:
        - name: nginx-storage
          PersistentVolumeClaim: 
            claimName: nginx-pvc
        - name: config-volume
          configMap:
            name: nginx-config
        - name: secret-volume
          secret:
            name: nginx-secret
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80 
      targetPort: 80
type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: ingress-nginx
spec:
  rules:
    - host: nginx.example.com
      http:
        paths: 
          - path: /
            pathType: Prefix
            backend: 
              service:
                name: nginx-service
                port:
                  number: 80 
      
    





        
                
